/**
***************************************************
* \page ug_tutorial_epi_seq %First steps tutorial

\n

In this tutorial the user is introduced guided through the setup and
performance of an EPI experiment. This step by step introduction shall
enable the user to setup own experiments thereafter.

To proceed the user must have successfully compiled JEMRIS 2 as
described in the \ref ug_intro_installation section. 

\section ug_tutorial_epi_seq_seq Setup the EPI sequence

\li Create a directory for your simulation experiments. This directory
will be called <b>\c work_dir</b> hereafter. 
\li Start up MATLAB
\li In MATLAB change directory to \c <b>work_dir</b>: <br/>
    <b> \c >> \c cd \c work_dir</b>
\li Add the path to the directory with the JEMRIS matlab code to your
MATLAB runtime
    <b> \c >> \c addpath \c /usr/local/share/jemris/matlab</b>
\li Start up the <b>Sequence GUI</b> with the following command<br>
    <b> \c >> \c JEMRIS_seq</b>
\image html pics/jemris_sequence.png
\image latex pics/jemris_sequence.png

We will now start to model an EPI sequence with the following
 protocol: TE 50ms, TR 100ms, FA 90, Imaging matrix 64x64, Maxmum
 gradient amplitude 40 mT/m, Maximum slewrate 200 mT/m, and FOV
 100x100.

\li From the File drop down menue choose "New sequence".
\li As <b>Filename</b> choose \c <b>MyEPI.xml</b> and save.

You will now see the minimum requirements for a sequence. The <b>top
 node</b> (outer most loop) of the sequence, \c <b>C1</b>, short
  ConcatSequence1, and the <b>paramters</b>, \c <b>P</b>. Let us start
 with the parameters. The <b>parameters</b> hold information valid for
 the whole sequence. These include in order from top left to bottom
 right: <b>name</b>, <b>FOV in x, y, and z direction</b>,<b>maximum
 gradient amplitude</b>, <b>maximum slewrate</b>, <b>TD</b>,
 <b>TE</b>, <b>TI</b>, and <b>TR</b>.

\li Set <b>\c FOVx</b> and <b>\c FOVy</b> to <b>\c 100</b> each.
\li Set <b>\c MaxGradAmpl</b> to <b>\c 40</b>.
\li Set <b>\c MaxSlewRate</b> to <b>\c 200</b>.
\li Set <b>\c Nx</b> and <b>\c Ny</b> to <b>\c 64</b> each.
\li Set <b>\c TE</b> to <b>\c 50</b>.
\li Set <b>\c TR</b> to <b>\c 100</b>.
\li Click on write XML.

Let us now model the sequence.

\li Click on the concat sequence \c <b>C1</b>
\li Set name to <b>\c Sli</b> for Slice loop.

Since we do not loop over more than one slices you do not need to
change any of the parameters of \c <b>Sli</b>.

We want to start with inserting the excitation puls. Pulses, which
are played out simultaneously are contained in <b>atomic
sequences</b>. 

\li Click in the selection bar on the symbol for atomic
sequences \c <b>A</b>.
\li Click on \c <b>Sli</b> and you will append.

An atomic sequence is appended to \c <b>Sli</b> by the name
of \c <b>A1</b>.

\li Change its name to \c <b>Exc</b> for excitation

Since we do not care for slice selection for this tutorial, we now
insert an hard RF pulse.

\li Click in the module bar on the symbol for the hard RF pulses.

When you hover over the fields a short description is shown for every
module.

\li Click on \c <b>Exc</b> to append the pulse to the excitation atomic
sequence. 
\li Change its name to \c <b>HRF</b> for hard RF pulse.
\li Set \c <b>Duration</b> to 2 for 2ms.
\li Set \c <b>FlipAngle</b> to 90 for 90 degrees.

Your sequence should, so far, look like this:
\image html pics/jemris_sequence_1.png
\image latex pics/jemris_sequence_1.png


The excitation is now sufficiently defined. We now need to insert
into the sequence the <b>dephasers</b> in read as well as PE
directions. For this purpose the next atom needs to be added after
the \c <b>Exc</b> atom. 

\li Select from the symbol bar the symbol for atomic sequences.
\li Click on \c <b>Sli</b> to insert the atom after \c <b>Exc</b>.
\li Change its name to \c <b>Dph</b> for dephasers.
\li Choose from the symbol bar the symbol for trapeziodal gradients.
\li Click on \c <b>Dph</b> to insert it therein.
\li Change its name to \c <b>RDp</b> for read dephaser.
\li Repeat the last three steps for the phase encoding
dephaser. 
\li Change its name to \c <b>PDp</b>
\li Change its axis to \c <b>GY</b>

The areas for the dephasing gradients can not be set yet, since we
have to prepare the actual readout and phase encoding gradients first.
But first we need to introduct a dead time to match the center of the
EPI readout with \c <b>TE</b> from the parameters.

\li Choose the symbol for a delay atomic sequence from the module bar.
\li Click on \c <b>Sli</b> to add it to the sequence.
\li Set its name to <b>\c DTE</b>

You will find details on delays here: \ref
ug_usage_sequence_gui_intro_seqmod. Once again the delay cannot be complete
entirely besides that we know that \c <b>TE</b> starts at the centre of
the excitation and ends at the centre of the EPI
readout. 

One could now type in the value for TE in \c <b>Duration</b>. But a
very convenient feature of JEMRIS helps us minimize the effort for
future changes to our sequence such as changes to TE. Namely that
every module is able to <b>observe</b> values in other modules of the
sequence; may they be dynamically changing over the duration of the
sequence or static.

We would like to observe \c <b>TE</b> from \c <b>P</b>. We inform \c
<b>DTE</b> in the following manner:

\li Set \c <b>Observe</b> to  <b>\c P,\c TE</b>

You will find a short introduction to the concept of observing attibutes here: \ref ug_usage_sequence_gui_ginac_obs.
Now we can use this new <b>attribute</b> known to the module as \c <b>a1</b>.

\li Set the \c <b>Delay</b> to <b>\c a1</b>.

You should be looking at a sequence representation looking as follows:
\image html pics/jemris_sequence_2.png
\image latex pics/jemris_sequence_2.png

Let us now insert and compose the EPI readout. For this, we would like
to implement a loop structure for one readout line and one phase
encoding blip to run through all phase encoding steps.

\li Click on the symbol of a concat sequence in the module bar.
\li Add it to the sequence by clicking on <b>\c Sli</b>.
\li Change its name to <b>\c ERL</b> for EPI readout loop.
\li Set <b>\c Observe</b> to <b>\c P,Ny</b>.
\li Set <b>\c Repetitions</b> to <b>\c a1</b> to reflect the repetition for each phase encoding step.
\li Add two atomic sequences to <b>\c ERL</b> to <b>\c ERL</b> and change their
names to <b>\c ROA</b> and <b>\c PEA</b> for readout atom and phase
encoding atom.
\li Add to each one trapezoidal gradient and change their names to
<b>\c ROG</b> and <b>\c PEG</b> and their <b>\c Axes</b> to <b>\c
GX</b> and <b>\c GY</b> respectively.

We have to define the FlatTopArea and the number of sampling points on
the flat top of <b>\c ROG</b>. The latter is rather
straightforward. We need to <b>observe</b> the imaging matrix size
defined in <b>\c P</b>. 

\li Set <b>\c Observe</b> to <b>\c P,Nx</b>.

This is the first attribute and known to <b>\c ROG</b>, according to
above, as <b>\c a1</b>.

\li Set <b>\c ADCs</b> to <b>\c a1</b>.

For defining the flat top of <b>\c ROG</b> we have to know the maximum
k-space vector in readout direction and the number of the line, which
is acquired. We introduce these two attributes to <b>\c
Observe</b>. Observed values are seperated by <b>\c /</b> (slash).

\li Append to <b>\c Observe</b> the following string: <b>\c
"/P,KMAXx/ERL,Counter"</b>

<b>\c ROG</b> now knows the two new attributes as <b>\c a2</b> an
<b>\c a3</b>. The <b>\c FlatTopArea</b> then should change the polarity for
every second line and go from <b>\c -KMAXx</b> to <b>\c +KMAXx</b>.

\li Set <b>\c FlatTopArea</b> to<b>\c 2*a2*(-1)^a3</b>.
\li Set <b>\c FlatTopTime</b> to <b>\c 1</b>.

Here the integrated library for symbolic mathematics, GiNAC helps us
to calculate the <b>\c FlatTopArea</b> by the evaluation of a symbolic
formula.

Let us define the <b>\c Area</b> of the PE blips, <b>\c PEG</b>. This is a very
simple assignement. The area will be the size of the phase encoding
steps in <b>\c Ky</b> direction.

\li Set <b>\c Observe</b> to <b>\c P,DKy</b>.
\li Set <b>\c Area</b> of <b>\c PEG</b> equal <b>\c -a1</b>.

The following image reflects the content of the sequence GUI up to this point:
\image html pics/jemris_sequence_3.png
\image latex pics/jemris_sequence_3.png

Now that <b>\c ROG</b> and <b>\c PEG </b>are defined we can go back and
define the missing parameters of <b>\c RDp</b> and <b>\c PDp</b>. <b>\c RDp</b>
should send the magnetisation to <b>\c -KMAXx</b> and <b>\c PDp</b> to
the top edge of the K-space (<b>\c KMAXy</b>).

\li Set <b>\c Observe</b> of <b>\c RDp</b> to <b>\c P,KMAXx</b>.
\li Set <b>\c Area</b> of <b>\c RDp</b> to <b>\c -a1</b>.
\li Set <b>\c Observe</b> of <b>\c PDp</b> to <b>\c P,KMAXy</b>.
\li Set <b>\c Area</b> of <b>\c PDp</b> to <b>\c a1</b>.

Let us now define the missing parameters of the delay <b>\c DTE</b>. 

\li Set the <b>\c DelayType</b> to <b>\c C2C</b>.
\li Set <b>\c StartSeq</b> to <b>\c HRF</b>.
\li Set <b>\c StopSeq</b> to <b>\c REL</b>.

The only missing element is now the constraints associated with TR. So
will add a delay to the end of the sequence to suffice those
constraints.

\li Choose from the module bar the symbol for an DelayAtomicSequence.
\li Click on <b>\c Sli</b> to append it to the sequence.
\li Set <b>\c Name</b> to <b>\c DTR</b>
\li Set <b>\c DelayTape</b> to <b>\c B2E</b>.
\li Set <b>\c Observe</b> to <b>\c P,TR</b>.
\li Set <b>\c Delay</b> to <b>\c a1</b>.
\li Set <b>\c StartSeq</b> to <b>\c Sli</b>.

We are done now with the EPI sequence. 

Let us, finally, have a look at the completed single slice EPI sequence, the associated sequence diagram, and the k-space trajectory reflecting the data acquisition scheme in the following three images:

\image html pics/jemris_sequence_4.png
\image latex pics/jemris_sequence_4.png

Click now on the check box \c <b>Sequence Diagram</b> at the top to see the currents played out during this sequence.

\image html pics/jemris_sequence_5.png
\image latex pics/jemris_sequence_5.png

Click now on the check boxes \c <b>k-space trajecory</b> and \c <b>continuous</b> to verify the sampling pattern and time evolution from \c <b>early</b> to \c <b>late</b>.

\image html pics/jemris_sequence_6.png
\image latex pics/jemris_sequence_6.png

Let us go on to simulate the sequence: <a href="ug_tutorial_epi_sim.html">%First steps tutorial - simulation</a>

***************************************************
*/

